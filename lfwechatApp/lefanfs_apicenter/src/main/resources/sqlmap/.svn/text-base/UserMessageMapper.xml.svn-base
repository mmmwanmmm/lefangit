<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lefanfs.apicenter.dao.UserMessageMapper">
	<resultMap id="BaseResultMap" type="com.lefanfs.apicenter.model.UserMessage">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="from_id" property="fromId" jdbcType="BIGINT" />
		<result column="message" property="message" jdbcType="VARCHAR" />
		<result column="business_type" property="businessType" jdbcType="INTEGER" />
		<result column="business_id" property="businessId" jdbcType="BIGINT" />
		<result column="business_state" property="businessState" jdbcType="INTEGER" />
		<result column="is_read" property="isRead" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
		<result column="push_time" property="pushTime" jdbcType="TIMESTAMP" />
		<result column="push_state" property="pushState" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, from_id, message, business_type, business_id, business_state, is_read,
		create_time, modify_time, delete_flag, push_time, push_state
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from user_message
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_message
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.lefanfs.apicenter.model.UserMessage">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into user_message (user_id, from_id, message,
		business_type, business_id, business_state,
		is_read, create_time, modify_time,
		delete_flag, push_time, push_state
		)
		values (#{userId,jdbcType=BIGINT}, #{fromId,jdbcType=BIGINT}, #{message,jdbcType=VARCHAR},
		#{businessType,jdbcType=INTEGER}, #{businessId,jdbcType=BIGINT}, #{businessState,jdbcType=INTEGER},
		#{isRead,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP},
		#{deleteFlag,jdbcType=INTEGER}, #{pushTime,jdbcType=TIMESTAMP}, #{pushState,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.lefanfs.apicenter.model.UserMessage">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into user_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="fromId != null">
				from_id,
			</if>
			<if test="message != null">
				message,
			</if>
			<if test="businessType != null">
				business_type,
			</if>
			<if test="businessId != null">
				business_id,
			</if>
			<if test="businessState != null">
				business_state,
			</if>
			<if test="isRead != null">
				is_read,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
			<if test="deleteFlag != null">
				delete_flag,
			</if>
			<if test="pushTime != null">
				push_time,
			</if>
			<if test="pushState != null">
				push_state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="fromId != null">
				#{fromId,jdbcType=BIGINT},
			</if>
			<if test="message != null">
				#{message,jdbcType=VARCHAR},
			</if>
			<if test="businessType != null">
				#{businessType,jdbcType=INTEGER},
			</if>
			<if test="businessId != null">
				#{businessId,jdbcType=BIGINT},
			</if>
			<if test="businessState != null">
				#{businessState,jdbcType=INTEGER},
			</if>
			<if test="isRead != null">
				#{isRead,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleteFlag != null">
				#{deleteFlag,jdbcType=INTEGER},
			</if>
			<if test="pushTime != null">
				#{pushTime,jdbcType=TIMESTAMP},
			</if>
			<if test="pushState != null">
				#{pushState,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.lefanfs.apicenter.model.UserMessage">
		update user_message
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="fromId != null">
				from_id = #{fromId,jdbcType=BIGINT},
			</if>
			<if test="message != null">
				message = #{message,jdbcType=VARCHAR},
			</if>
			<if test="businessType != null">
				business_type = #{businessType,jdbcType=INTEGER},
			</if>
			<if test="businessId != null">
				business_id = #{businessId,jdbcType=BIGINT},
			</if>
			<if test="businessState != null">
				business_state = #{businessState,jdbcType=INTEGER},
			</if>
			<if test="isRead != null">
				is_read = #{isRead,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleteFlag != null">
				delete_flag = #{deleteFlag,jdbcType=INTEGER},
			</if>
			<if test="pushTime != null">
				push_time = #{pushTime,jdbcType=TIMESTAMP},
			</if>
			<if test="pushState != null">
				push_state = #{pushState,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lefanfs.apicenter.model.UserMessage">
		update user_message
		set user_id = #{userId,jdbcType=BIGINT},
		from_id = #{fromId,jdbcType=BIGINT},
		message = #{message,jdbcType=VARCHAR},
		business_type = #{businessType,jdbcType=INTEGER},
		business_id = #{businessId,jdbcType=BIGINT},
		business_state = #{businessState,jdbcType=INTEGER},
		is_read = #{isRead,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		modify_time = #{modifyTime,jdbcType=TIMESTAMP},
		delete_flag = #{deleteFlag,jdbcType=INTEGER},
		push_time = #{pushTime,jdbcType=TIMESTAMP},
		push_state = #{pushState,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectList" resultType="com.lefanfs.apicenter.dto.MsgListDto" parameterType="java.util.Map">
		select
			id as msgId,
			from_id as fromUserId,
			business_type as businessType,
			message as msgContent,
			business_id as businessId,
			business_state as businessState,
			is_read as isRead,
			create_time as createTime
		from user_message um
		where um.delete_flag = 0
		<choose>
			<when test="current_user_id != null">
				and (um.user_id = 0 or um.user_id = #{current_user_id})
			</when>
			<otherwise>
				and um.user_id = 0
			</otherwise>
		</choose>
		<if test="fromUserId != null">
			and um.from_id = #{fromUserId}
		</if>
		<if test="excludeFromUserId != null">
			and um.from_id != #{excludeFromUserId}
		</if>
		<if test="businessType != null">
			and um.business_type = #{businessType}
		</if>
		order by um.create_time desc
		<if test="pageIndex == null and pageSize != null">
			limit #{pageSize}
		</if>
		<if test="pageIndex != null and pageSize != null">
			limit #{pageIndex}, #{pageSize}
		</if>
	</select>
</mapper>