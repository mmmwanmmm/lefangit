<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lefanfs.apicenter.dao.UserPromotedMapper" >
  <resultMap id="BaseResultMap" type="com.lefanfs.apicenter.model.UserPromoted" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="occupation" property="occupation" jdbcType="INTEGER" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="district" property="district" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="promoted_qrcode" property="promotedQrcode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, real_name, phone, occupation, province, city, district, create_time,state,promoted_qrcode
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_promoted
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_promoted
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lefanfs.apicenter.model.UserPromoted" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_promoted (user_id, real_name, phone, 
      occupation, province, city,
      district, create_time，state，promoted_qrcode)
    values (#{userId,jdbcType=BIGINT}, #{realName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{occupation,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{district,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER},
      #{promotedQrcode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lefanfs.apicenter.model.UserPromoted" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_promoted
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="occupation != null" >
        occupation,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
            state,
      </if>
      <if test="promotedQrcode != null" >
          promoted_qrcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="occupation != null" >
        #{occupation,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
        <if test="promotedQrcode != null" >
            #{promotedQrcode,jdbcType=VARCHAR},
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lefanfs.apicenter.model.UserPromoted" >
    update user_promoted
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="occupation != null" >
        occupation = #{occupation,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
          district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="promotedQrcode != null" >
        promoted_qrcode = #{promotedQrcode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lefanfs.apicenter.model.UserPromoted" >
    update user_promoted
    set user_id = #{userId,jdbcType=BIGINT},
      real_name = #{realName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      occupation = #{occupation,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      promoted_qrcode = #{promotedQrcode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectUserPromotedByUserId" resultMap="BaseResultMap" parameterType="java.util.Map" >
        select
        <include refid="Base_Column_List" />
        from user_promoted
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="selectUserPromotedByParam" resultMap="BaseResultMap"  parameterType="java.util.Map" >
        select
        <include refid="Base_Column_List" />
        from user_promoted
        ORDER by id desc limit #{pageIndex} , #{pageSize}
    </select>
</mapper>