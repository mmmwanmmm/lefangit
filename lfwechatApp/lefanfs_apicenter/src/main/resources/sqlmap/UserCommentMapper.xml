<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lefanfs.apicenter.dao.UserCommentMapper" >
  <resultMap id="BaseResultMap" type="com.lefanfs.apicenter.model.UserComment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="comment_type" property="commentType" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="comment_to" property="commentTo" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="BIGINT" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
    <result column="reply_parent_id" property="replyParentId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, nick_name, comment_type, comment, comment_to, create_time, create_id, 
    delete_flag, reply_parent_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_comment
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByUserIdWithOutReply" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from user_comment
    where delete_flag = 0 and user_id = #{userId,jdbcType=BIGINT} and reply_parent_id is null
    ORDER  by id desc limit #{pageIndex} , #{pageSize}
  </select>
  <select id="searchComment" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from user_comment
    where delete_flag = 0
    <if test="commentTo != null">
      and comment_to = #{commentTo}
    </if>
    <if test="comment != null">
      and comment like  CONCAT(CONCAT('%',#{comment,jdbcType=VARCHAR}),'%')
    </if>
    ORDER by id desc limit #{pageIndex} , #{pageSize}
  </select>

  <select id="selectByParentIdList" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from user_comment
    where delete_flag = 0  and reply_parent_id IN 
    <foreach collection="userCommentIdList" item="userCommentId" open="(" separator="," close=")">
      #{userCommentId}
    </foreach>
    ORDER BY  reply_parent_id,id
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lefanfs.apicenter.model.UserComment" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_comment (user_id, nick_name, comment_type, 
      comment, comment_to, create_time, 
      create_id, delete_flag, reply_parent_id
      )
    values (#{userId,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{commentType,jdbcType=INTEGER}, 
      #{comment,jdbcType=VARCHAR}, #{commentTo,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=BIGINT}, #{deleteFlag,jdbcType=INTEGER}, #{replyParentId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lefanfs.apicenter.model.UserComment" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="commentType != null" >
        comment_type,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="commentTo != null" >
        comment_to,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="replyParentId != null" >
        reply_parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="commentType != null" >
        #{commentType,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentTo != null" >
        #{commentTo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="replyParentId != null" >
        #{replyParentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lefanfs.apicenter.model.UserComment" >
    update user_comment
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="commentType != null" >
        comment_type = #{commentType,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentTo != null" >
        comment_to = #{commentTo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="replyParentId != null" >
        reply_parent_id = #{replyParentId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lefanfs.apicenter.model.UserComment" >
    update user_comment
    set user_id = #{userId,jdbcType=BIGINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      comment_type = #{commentType,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      comment_to = #{commentTo,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=BIGINT},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      reply_parent_id = #{replyParentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>